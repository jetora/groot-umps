<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.flow.dao.mapper.OrganizationMapper" >
  <resultMap id="BaseResultMap" type="org.flow.entity.Organization" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="organization_id" property="organizationId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="enabled" property="enabled" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from organization
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.flow.entity.Organization" >
    insert into organization (id, organization_id, name, 
      parent_id, enabled)
    values (#{id,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=BIGINT}, #{enabled,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.flow.entity.Organization" >
    update organization
    set organization_id = #{organizationId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      enabled = #{enabled,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, organization_id, name, parent_id, enabled, create_time, update_time
    from organization
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, organization_id, name, parent_id, enabled, create_time, update_time
    from organization
  </select>
  <select id="selectCount" resultType="java.lang.Integer" >
    select count(id)
    from organization
  </select>
  <select id="selectByPager" resultMap="BaseResultMap">
    select t1.id,t1.organization_id, name, parent_id, enabled, create_time, update_time
    from organization t1
    JOIN (select id from organization where 1=1
    <if test="search_org_name !=null and search_org_name !=''">
      and name = #{search_org_name}
    </if>
    <if test="search_org_id != null and search_org_id !=''">
      and organization_id = #{search_org_id}
    </if>
    <if test="enabled != -1">
      and enabled = #{enabled}
    </if>
    <choose>
      <when test="ordername=='createTime'">
        ORDER BY create_time
      </when>
      <when test="ordername=='updateTime'">
        ORDER BY update_time
      </when>
      <otherwise>
        ORDER BY ${ordername}
      </otherwise>
    </choose>
    ${order} limit #{offSet} , #{pageSize}) as t2
    where t1.id=t2.id
    <if test="search_org_name !=null and search_org_name !=''">
      and name = #{search_org_name}
    </if>
    <if test="search_org_id != null and search_org_id !=''">
      and organization_id = #{search_org_id}
    </if>
    <if test="enabled != -1">
      and enabled = #{enabled}
    </if>
    <choose>
      <when test="ordername=='createTime'">
        ORDER BY create_time
      </when>
      <when test="ordername=='updateTime'">
        ORDER BY update_time
      </when>
      <otherwise>
        ORDER BY ${ordername}
      </otherwise>
    </choose>
    ${order} LIMIT #{pageSize}
  </select>
  <select id="selectByWhereCount" resultType="java.lang.Integer">
    select count(id)
    from organization
    where 1=1
    <if test="search_org_name != null and search_org_name !=''" >
      and name = #{search_org_name}
    </if>
    <if test="search_org_id != null and search_org_id !=''" >
      and type = #{search_org_id}
    </if>
    <if test="enabled != -1">
      and enabled = #{enabled}
    </if>
    ORDER BY #{ordername} #{order}
  </select>
</mapper>