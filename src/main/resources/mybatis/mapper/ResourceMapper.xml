<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.flow.dao.mapper.ResourceMapper" >
  <resultMap id="BaseResultMap" type="org.flow.entity.Resource" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="data_target" property="dataTarget" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="enabled" property="enabled" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.flow.entity.Resource" >
    insert into resource (id, resource_id, name, 
      url, method, parent_id, 
      parent_ids, permission, data_target, 
      icon, component, type, 
      enabled
      )
    values (#{id,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{parentIds,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, #{dataTarget,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{enabled,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.flow.entity.Resource" >
    update resource
    set resource_id = #{resourceId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      parent_ids = #{parentIds,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      data_target = #{dataTarget,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      enabled = #{enabled,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, resource_id, name, url, method, parent_id, parent_ids, permission, data_target, 
    icon, component, type, enabled, create_time, update_time
    from resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, resource_id, name, url, method, parent_id, parent_ids, permission, data_target, 
    icon, component, type, enabled, create_time, update_time
    from resource
  </select>
  <select id="selectMenuAll" resultMap="BaseResultMap" >
    select resource_id, name, url ,method, parent_id, parent_ids, permission,data_target, icon, component,
    type, enabled, create_time, update_time
    from resource where type=1 or type is null
  </select>
  <select id="selectCount" resultType="java.lang.Integer" >
    select count(id)
    from resource
  </select>
  <select id="selectByPager" resultMap="BaseResultMap">
    select t1.id,t1.resource_id, name, url, parent_id, parent_ids, permission, data_target, icon,
    type, enabled, create_time, update_time
    from resource t1
    JOIN (select id from resource where 1=1
    <if test="resource_name !=null and resource_name !=''">
      and name = #{resource_name}
    </if>
    <if test="resource_type != -1">
      and type = #{resource_type}
    </if>
    <if test="enabled != -1">
      and enabled = #{enabled}
    </if>
    <choose>
      <when test="ordername=='createTime'">
        ORDER BY create_time
      </when>
      <when test="ordername=='updateTime'">
        ORDER BY update_time
      </when>
      <otherwise>
        ORDER BY ${ordername}
      </otherwise>
    </choose>
    ${order} limit #{offSet} , #{pageSize}) as t2
    where t1.id=t2.id
    <if test="resource_name !=null and resource_name !=''">
      and name = #{resource_name}
    </if>
    <if test="resource_type != -1">
      and type = #{resource_type}
    </if>
    <if test="enabled != -1">
      and enabled = #{enabled}
    </if>
    <choose>
      <when test="ordername=='createTime'">
        ORDER BY create_time
      </when>
      <when test="ordername=='updateTime'">
        ORDER BY update_time
      </when>
      <otherwise>
        ORDER BY ${ordername}
      </otherwise>
    </choose>
    ${order} LIMIT #{pageSize}
  </select>
  <select id="selectByWhereCount" resultType="java.lang.Integer">
    select count(id)
    from resource
    where 1=1
    <if test="resource_name != null and resource_name !=''" >
      and name = #{resource_name}
    </if>
    <if test="resource_type != -1" >
      and type = #{resource_type}
    </if>
    <if test="enabled != -1">
      and enabled = #{enabled}
    </if>
    ORDER BY #{ordername} #{order}
  </select>
</mapper>